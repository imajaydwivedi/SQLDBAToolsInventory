# Generated by Django 2.1.3 on 2019-01-02 15:22

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Backuphistory',
            fields=[
                ('backuphistid', models.AutoField(db_column='BackupHistId', primary_key=True, serialize=False)),
                ('fullbackupdate', models.DateTimeField(blank=True, db_column='FullbackupDate', null=True)),
                ('diffbackupdate', models.DateTimeField(blank=True, db_column='DiffBackupDate', null=True)),
                ('tranbackupdate', models.DateTimeField(blank=True, db_column='TranBackupDate', null=True)),
                ('fullbackupsize', models.DecimalField(blank=True, db_column='FullBackupSize', decimal_places=0, max_digits=20, null=True)),
                ('diffbackupsize', models.DecimalField(blank=True, db_column='DiffBackupSize', decimal_places=0, max_digits=20, null=True)),
                ('tranbackupsize', models.DecimalField(blank=True, db_column='TranBackupSize', decimal_places=0, max_digits=20, null=True)),
                ('fullbackupduration', models.IntegerField(blank=True, db_column='FullBackupDuration', null=True)),
                ('diffbackupduration', models.IntegerField(blank=True, db_column='DiffBackupDuration', null=True)),
                ('tranbackupduration', models.IntegerField(blank=True, db_column='TranBackupDuration', null=True)),
                ('compressed', models.BooleanField(blank=True, db_column='Compressed', null=True)),
            ],
            options={
                'db_table': 'BackupHistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Backupschedule',
            fields=[
                ('bkuschedid', models.AutoField(db_column='BkuSchedId', primary_key=True, serialize=False)),
                ('timefrom', models.TimeField(blank=True, db_column='TimeFrom', null=True)),
                ('timeto', models.TimeField(blank=True, db_column='TimeTo', null=True)),
            ],
            options={
                'db_table': 'BackupSchedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Commandqueue',
            fields=[
                ('guid', models.CharField(db_column='GUID', max_length=254)),
                ('command', models.TextField(db_column='Command')),
                ('jobid', models.CharField(blank=True, db_column='jobId', max_length=50, null=True)),
                ('jobtype', models.CharField(choices=[('BKU', 'BKU'), ('NA', 'Not Available')], db_column='JobType', default='BKU', max_length=20)),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('NA', 'Not Available')], db_column='Status', default='Scheduled', max_length=10)),
                ('reason', models.TextField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'CommandQueue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('databaseid', models.AutoField(db_column='DatabaseId', primary_key=True, serialize=False)),
                ('databasename', models.CharField(db_column='DatabaseName', max_length=50)),
                ('createddate', models.DateTimeField(blank=True, db_column='CreatedDate', null=True)),
                ('recoverymodel', models.CharField(blank=True, choices=[('Simple', 'Simple'), ('Bulk-Logged', 'Bulk-Logged'), ('Full', 'Full')], db_column='RecoveryModel', default='Full', max_length=64, null=True)),
                ('currentdbsize', models.CharField(blank=True, db_column='CurrentDBSize', max_length=10, null=True)),
                ('backuppath', models.CharField(blank=True, db_column='BackupPath', max_length=128, null=True)),
            ],
            options={
                'db_table': 'Databases',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('instanceid', models.AutoField(db_column='InstanceID', primary_key=True, serialize=False)),
                ('instancename', models.CharField(db_column='InstanceName', max_length=128)),
                ('port', models.CharField(blank=True, db_column='Port', max_length=8, null=True)),
                ('ipaddress', models.CharField(blank=True, db_column='IPAddress', max_length=15, null=True)),
                ('sqlserviceaccountid', models.IntegerField(blank=True, db_column='SQLServiceAccountID', null=True)),
                ('authenticationmode', models.BooleanField(blank=True, db_column='AuthenticationMode', null=True)),
                ('saaccountname', models.CharField(blank=True, db_column='saAccountName', max_length=128, null=True)),
                ('saaccountpassword', models.CharField(blank=True, db_column='saAccountPassword', max_length=64, null=True)),
                ('instanceclassification', models.SmallIntegerField(blank=True, db_column='InstanceClassification', null=True)),
                ('instancecores', models.SmallIntegerField(blank=True, db_column='InstanceCores', null=True)),
                ('instanceram', models.BigIntegerField(blank=True, db_column='InstanceRAM', null=True)),
                ('sqlserveragentaccountid', models.IntegerField(blank=True, db_column='SQLServerAgentAccountID', null=True)),
                ('defaultbkupath', models.CharField(blank=True, db_column='DefaultBkuPath', max_length=250, null=True)),
                ('defaultbkupathsize', models.CharField(blank=True, db_column='DefaultBkuPathSize', max_length=20, null=True)),
                ('defaultbkupathfree', models.CharField(blank=True, db_column='DefaultBkuPathFree', max_length=20, null=True)),
                ('maxjobcount', models.IntegerField(blank=True, db_column='maxJobCount', null=True)),
            ],
            options={
                'db_table': 'Instance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Logging',
            fields=[
                ('logid', models.AutoField(db_column='logId', primary_key=True, serialize=False)),
                ('logmessage', models.TextField(db_column='LogMessage')),
            ],
            options={
                'db_table': 'Logging',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('serverid', models.AutoField(db_column='ServerID', primary_key=True, serialize=False)),
                ('server', models.CharField(blank=True, db_column='Server', max_length=128, null=True)),
                ('domain', models.CharField(blank=True, choices=[('Corporate', 'Corporate'), ('Armus', 'Armus'), ('Angoss', 'Angoss'), ('NA', 'Not Available')], db_column='Domain', default='Corporate', max_length=25, null=True)),
                ('servertype', models.CharField(blank=True, choices=[('NA', 'Not Available'), ('Cluster Instance', 'Cluster Instance'), ('Decommissioned/To Be Decommissioned', 'Decommissioned/To Be Decommissioned'), ('Dev', 'Development'), ('DR', 'Disaster Recovery'), ('DTC Cluster Instance', 'DTC Cluster Instance'), ('Prod', 'Production'), ('Win Cluster', 'Windows Cluster')], db_column='ServerType', default='Prod', max_length=50, null=True)),
                ('shortdescription', models.CharField(blank=True, db_column='ShortDescription', max_length=128, null=True)),
                ('sqlstate', models.CharField(blank=True, choices=[('Start', 'Started'), ('Stop', 'Stopped'), ('Pause', 'Paused')], db_column='SQLState', default='Start', max_length=20, null=True)),
                ('category', models.CharField(blank=True, choices=[('NA', 'Not Available'), ('Corporate', 'Corporate'), ('IT', 'IT'), ('Product', 'Product')], db_column='Category', default='Product', max_length=20, null=True)),
                ('businessunit', models.CharField(blank=True, choices=[('NA', 'Not Available'), ('Advertising', 'Advertising'), ('Finance', 'Finance'), ('IPG', 'IPG'), ('IT', 'IT'), ('MetaData', 'MetaData'), ('Sales', 'Sales')], db_column='BusinessUnit', default='MetaData', max_length=20, null=True)),
                ('os', models.CharField(blank=True, choices=[('NA', 'Not Available'), ('Microsoft Windows 2000 Server', 'Microsoft Windows 2000 Server'), ('Microsoft Windows Server 2008  Enterprise', 'Microsoft Windows Server 2008  Enterprise'), ('Microsoft Windows Server 2008 R2 Enterprise', 'Microsoft Windows Server 2008 R2 Enterprise'), ('Microsoft Windows Server 2008 R2 Standard', 'Microsoft Windows Server 2008 R2 Standard'), ('Microsoft Windows Server 2012 R2 Datacenter', 'Microsoft Windows Server 2012 R2 Datacenter'), ('Microsoft Windows Server 2012 R2 Standard', 'Microsoft Windows Server 2012 R2 Standard'), ('Microsoft Windows Server 2012 Standard', 'Microsoft Windows Server 2012 Standard'), ('Microsoft Windows Server 2016 Standard', 'Microsoft Windows Server 2016 Standard'), ('Microsoft(R) Windows(R) Server 2003 Enterprise x64 Edition', 'Microsoft(R) Windows(R) Server 2003 Enterprise x64 Edition'), ('Microsoft(R) Windows(R) Server 2003 Standard x64 Edition', 'Microsoft(R) Windows(R) Server 2003 Standard x64 Edition'), ('Microsoft(R) Windows(R) Server 2003~ Enterprise Edition', 'Microsoft(R) Windows(R) Server 2003~ Enterprise Edition'), ('Microsoft(R) Windows(R) Server 2003~ Standard Edition', 'Microsoft(R) Windows(R) Server 2003~ Standard Edition'), ('Microsoft® Windows Server® 2008 Enterprise', 'Microsoft® Windows Server® 2008 Enterprise'), ('Microsoft® Windows Server® 2008 Standard', 'Microsoft® Windows Server® 2008 Standard')], db_column='OS', default='Microsoft Windows Server 2012 R2 Standard', max_length=64, null=True)),
                ('sqlversion', models.CharField(blank=True, db_column='SQLVersion', max_length=64, null=True)),
                ('sockets', models.IntegerField(blank=True, db_column='Sockets', null=True)),
                ('cores', models.IntegerField(blank=True, db_column='Cores', null=True)),
                ('logicalprocs', models.IntegerField(blank=True, db_column='LogicalProcs', null=True)),
                ('businessowner', models.CharField(blank=True, db_column='Businessowner', max_length=25, null=True)),
                ('technicalowner', models.CharField(blank=True, db_column='TechnicalOwner', max_length=25, null=True)),
                ('secondarytechnicalowner', models.CharField(blank=True, db_column='SecondaryTechnicalOwner', max_length=25, null=True)),
                ('additionalnotes', models.TextField(blank=True, db_column='AdditionalNotes', null=True)),
                ('backuppsdeployed', models.BooleanField(blank=True, db_column='BackupPSDeployed', null=True)),
                ('sqltype', models.CharField(blank=True, choices=[('MSSQL', 'Sql Server'), ('Oracle', 'Oracle'), ('MySQL', 'MySQL'), ('Hadoop', 'Hadoop'), ('Mongo', 'Mongo'), ('SQLlite', 'SQLlite'), ('Other', 'Other')], db_column='SQLType', default='MSSQL', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Server',
                'managed': False,
            },
        ),
    ]
